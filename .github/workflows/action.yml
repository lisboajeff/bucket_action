name: Python CLI to Synchronize Certificates

on:
  workflow_call:
    inputs:
      country:
        type: string
        description: 'Country name'
        required: true
      environment:
        type: string
        description: 'Environment'
        required: true
      certificates:
        type: string
        description: 'Path to certificates'
        required: true

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    env:
      PATH_TO_ENV: "${{ inputs.country }}/${{ inputs.environment }}"
      PATH_TO_CERTIFICATE: "${{ inputs.certificates }}"
      COUNTRY: "${{ inputs.country }}"
      ENVIRONMENT: "${{ inputs.environment }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load Environment Configurations
        run: |
          
          ENV_FILE=$PATH_TO_ENV/config.env
          
          if [ ! -f "$ENV_FILE" ]; then
              echo "File .env not found: $ENV_FILE"
              exit 1
          fi
          while IFS= read -r line || [[ -n "$line" ]]; do
              if [[ $line = \#* ]] || [ -z "$line" ]; then
                  continue
              fi
              echo "$line" >> "$GITHUB_ENV"
          done <"$ENV_FILE"

      - name: Verify Directory Structure and Configuration File
        run: |
          if [ ! -f "$PATH_TO_ENV/config.env" ]; then
            echo "Error: config.env file not found." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          if [ ! -d "$PATH_TO_CERTIFICATE/${{ env.TRUSTSTORE }}" ]; then
            echo "Error: certificates/${{ env.TRUSTSTORE }} directory not found." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          if [ ! -d "$PATH_TO_CERTIFICATE/${{ env.TLS }}" ]; then
            echo "Error: certificates/${{ env.TLS }} directory not found." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          echo "All directory structure checks have passed successfully."

      - name: Verify variables in config.env
        env:
          REQUIRED_VARS: "AWS_REGION BUCKET_NAME TRUSTSTORE TLS"
        run: |
          IFS=' ' read -r -a REQUIRED_VARS_ARRAY <<< "$REQUIRED_VARS"
          MISSING_VARS=()
          for VAR in "${REQUIRED_VARS_ARRAY[@]}"; do
            if ! grep -qE "^${VAR}=" $PATH_TO_ENV/config.env; then
              MISSING_VARS+=("$VAR")
            fi
          done  
          if [ ${#MISSING_VARS[@]} -ne 0 ]; then
            echo "Error: The following variables are missing in config.env: ${MISSING_VARS[*]}" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          echo "All necessary variables are defined in config.env."

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install Requirements
        run: pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync files to S3
        run: python src/main.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Publish Report to Job Summary
        run: |
          echo "### S3 Sync Report" >> $GITHUB_STEP_SUMMARY
          cat s3_sync_report.md >> $GITHUB_STEP_SUMMARY